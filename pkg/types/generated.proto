/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.nevercase.publisher.pkg.types;

// Package-wide variables from generator "generated".
option go_package = "types";

message Group {
  optional string name = 1;

  optional string namespace = 2;

  map<string, Project> projects = 3;
}

message Number {
  optional string name = 1;

  optional int32 value = 2;
}

message Project {
  optional string name = 1;

  optional string namespace = 2;

  optional string groupName = 3;

  map<string, string> envs = 4;
}

message Step {
  optional int32 id = 1;

  // Name was the name of a Step which must be unique
  optional string name = 2;

  // The phase of a Step is a simple, high-level summary of where the Step is in its lifecycle.
  optional string status = 3;

  // Policy was the StepPolicy of the Step which could control the Runner
  optional string policy = 4;

  // Envs were the environment values which would be used by the called shell script.
  // Usually, they would include some base configuration
  map<string, string> envs = 5;

  // Output was the stdout from the executing shell commands
  repeated string output = 6;

  // UploadFiles were the map of the files which would be uploaded to the remote ftp server by the Step Run().
  repeated UploadFile uploadFiles = 7;

  // WriteFiles were map of the files which would be written to the remote ftp server by the Step Run().
  repeated WriteFile writeFiles = 8;

  // RunnerName was the name of a Runner (the Runner which has been called to run this Step)
  optional string runnerName = 9;
}

message Task {
  optional int32 id = 1;

  optional Project project = 2;

  repeated Step clientSteps = 3;

  repeated Step serverSteps = 4;
}

message UploadFile {
  // SourceFile was the absolute path about the file which has been marked to be uploaded later.
  optional string sourceFile = 1;

  // TargetPath was the target directory, it may be needed to be created before uploading the SourceFile
  optional string targetPath = 2;

  // TargetFile was the relative path about the file which would be created in the ftp server.
  optional string targetFile = 3;
}

message Version {
  repeated Number codes = 1;
}

message WriteFile {
  // Content was the context of the file which needed to be written to the remote ftp server.
  optional bytes content = 1;

  // TargetFile was the relative path about the file which would be created in the ftp server.
  optional string targetFile = 2;
}

